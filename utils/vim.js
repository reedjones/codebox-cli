const childProcess = require('child_process');
const fs = require('fs');
const path = require('path');
const os = require('os');

const spawnSync = childProcess.spawnSync;

// Cross-platform temp file path using the system temp directory
const defaultTempFile = path.join(os.tmpdir(), `temp-${process.pid}-${Date.now()}.tmp`);

// Determine default editor based on platform and environment variables
let defaultEditor = /^win/.test(process.platform) ? 'notepad' : 'vim';
defaultEditor = process.env.VISUAL || process.env.EDITOR || defaultEditor;

// Main function to open an editor and get the contents
exports.editorSync = function (option = {}) {
  const tempFile = option.file || defaultTempFile;

  try {
    // If content is provided, write it to the temp file
    if (option.content !== undefined) {
      fs.writeFileSync(tempFile, option.content, { encoding: 'utf8' });
    }

    // Spawn the editor process and wait for the user to finish
    const editor = option.editor || defaultEditor;
    const result = spawnSync(editor, [tempFile], { stdio: 'inherit' });

    // Handle errors during spawning of the editor
    if (result.error) {
      throw new Error(`Failed to open editor: ${result.error.message}`);
    }

    // Read and return the contents of the file after editing
    const contents = fs.readFileSync(tempFile, 'utf8');

    // Clean up the temporary file if it was generated by the script
    if (!option.file) {
      fs.unlinkSync(tempFile);
    }

    return contents;

  } catch (error) {
    console.error(`Error occurred: ${error.message}`);
    throw error;
  }
};
